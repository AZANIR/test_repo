name: 'Playwright = Test Reporting222'
on:
    workflow_dispatch:
        inputs:
            stage_url:
                description: 'Select an environment: "dev" , "local"'
                required: true
                default: 'https://backoffice-dev.eu.ballerine.io'
            qase_report:
                description: 'Choose qase report option: on(1) / off(0)'
                required: false
                default: '0'
            base_api_url:
                description: 'Set api url default or custom'
                required: true
                default: 'https://api-dev.eu.ballerine.io'
            clips_pay_token:
                description: 'Set clips pay token default or custom'
                required: true
                default: ''
            trace:
                type: choice
                description: 'Choose trace option: on / off / retain-on-failure'
                required: false
                default: 'retain-on-failure'
                options:
                    - 'retain-on-failure'
                    - 'on'
                    - 'off'
            login:
                description: 'Set login option: default or custom'
                required: true
                default: 'admin@admin.com'
            password:
                description: 'Set password option: default or custom'
                required: true
                default: 'admin'
            api_token_github:
                description: 'GitHub token'
                required: true
                default: ''

jobs:
    Run_tests:
        timeout-minutes: 360
        runs-on: ubuntu-20.04
        env:
            STAGE_URL: ${{ inputs.stage_url }}
            QASE_REPORT: ${{ inputs.qase_report }}
            BASE_API_URL: ${{ inputs.base_api_url }}
            CLIPS_PAY_TOKEN: ${{ inputs.clips_pay_token }}
            TRACE: ${{ inputs.trace }}
            LOGIN: ${{ inputs.login }}
            PASSWORD: ${{ inputs.password }}
            API_TOKEN_GITHUB: ${{ inputs.api_token_github }}
        permissions:
            contents: read
            issues: read
            checks: write
            pull-requests: write
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 20
            - name : Create app directory
              run: |
                sudo mkdir /app
                ls -la
            - name: Setup and run local env 
              working-directory: ./app
              run: |
                sudo git clone https://github.com/ballerine-io/ballerine.git --recursive
                sudo npm install -g pnpm
                sudo pnpm install
                sudo pnpm monorepo:init
                sudo git clone https://$API_TOKEN_GITHUB@github.com/ballerine-io/wf-data-migration.git services/workflows-service/prisma/data-migrations
            - name: install dependencies
              run: |
                  npm i
                  npm install allure-commandline --save-dev
                  npx playwright install --with-deps
            - name: Run tests
              run: export BASE_URL="$STAGE_URL" LOGIN_EMAIL="$LOGIN" LOGIN_PASSWORD="$PASSWORD" BASE_API_URL="$BASE_API_URL" CLIPS_PAY_TOKEN="$CLIPS_PAY_TOKEN" && PLAYWRIGHT_JSON_OUTPUT_NAME=results.json npx playwright test --reporter json --trace "$TRACE"
            - uses: actions/upload-artifact@v3
              if: always()
              with:
                  name: playwright-report
                  path: playwright-report/
                  retention-days: 5
            - name: Test Report
              uses: phoenix-actions/test-reporting@v8
              id: test-report # Set ID reference for step
              if: success() || failure() # run this step even if previous step failed
              with:
                  name: JEST Tests # Name of the check run which will be created
                  path: junit-report/junit-report.xml # Path to test results
                  reporter: jest-junit
